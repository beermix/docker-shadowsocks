FROM alpine:edge

ENV SHADOWSOCKS_VERSION master
ENV KCPTUN_VERSION 20200226
ENV SIMPLE_OBFS_VERSION master
ENV SHADOWSOCKS_URL https://github.com/shadowsocks/shadowsocks-libev
ENV SIMPLE_OBFS_URL https://github.com/shadowsocks/simple-obfs
ENV KCPTUN_URL https://github.com/xtaci/kcptun/releases/download/v$KCPTUN_VERSION/kcptun-linux-amd64-$KCPTUN_VERSION.tar.gz

RUN apk upgrade --update \
  && apk add --no-cache --virtual .build-deps build-base gcc abuild alpine-sdk cmake binutils autoconf automake libtool curl git gawk sed \
  linux-headers udns-dev pcre-dev mbedtls-dev libsodium-dev c-ares-dev libev-dev libnetfilter_conntrack libnetfilter_queue libnetfilter_cthelper libnetfilter_cttimeout \
  && cd /tmp \
  && git clone --recursive --depth 1 "$SHADOWSOCKS_URL" \
  && cd shadowsocks-libev/build \
  && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DWITH_DOC_HTML=OFF -DWITH_DOC_MAN=OFF -DWITH_EMBEDDED_SRC=ON -DWITH_SS_REDIR=OFF -DWITH_STATIC=OFF -DCMAKE_VERBOSE_MAKEFILE=ON ..\
  && make \
  && make install \
  && strip -s /usr/bin/ss-server \
  && rm /usr/bin/ss-manager /usr/bin/ss-tunnel /usr/bin/ss-local \
  && cd /tmp \
  && git clone --recursive --depth 1 $SIMPLE_OBFS_URL \
  && cd simple-obfs \
  && ./autogen.sh \
  && ./configure --disable-documentation --disable-ssp --disable-assert \
  && make \
  && make install \
  && strip -s /usr/local/bin/obfs-* \
  && cd /tmp \
  && curl -sSLO $KCPTUN_URL \
  && tar xfz kcptun-linux-amd64-${KCPTUN_VERSION}.tar.gz \
  && mv server_linux_amd64 /usr/bin/kcptun-server \
  && mv client_linux_amd64 /usr/bin/kcptun-client \
  && runDeps="$( \
      scanelf --needed --nobanner /usr/bin/ss-server /usr/local/bin/obfs-* \
        | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
        | xargs -r apk info --installed \
        | sort -u \
      )" \
  && apk add --virtual .run-deps $runDeps ca-certificates rng-tools \
  && apk add --virtual .sys-deps bash \
  && apk del .build-deps \
  && rm -rf /tmp/* /var/cache/apk/*

ADD sysctl.conf /etc/sysctl.conf
ADD entrypoint.sh /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
